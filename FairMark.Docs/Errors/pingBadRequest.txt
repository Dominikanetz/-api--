Message: FairMark.FairMarkException : BadRequest

--------------


// Authenticate
-> GET https://demo.lp.crpt.tech/api/v3/auth/cert/key
headers: {
  X-ApiMethodName = Authenticate
  Accept = application/json, text/json, text/x-json, text/javascript, application/xml, text/xml
}

<- OK 200 (OK) https://demo.lp.crpt.tech/api/v3/auth/cert/key
timings: {
  started: 2021-04-13 00:38:09
  elapsed: 0:00:00.203
}
headers: {
  Transfer-Encoding = chunked
  Connection = keep-alive
  Vary = Accept-Encoding
  Content-Encoding =
  Content-Type = application/json;charset=UTF-8
  Date = Mon, 12 Apr 2021 21:38:09 GMT
  Set-Cookie = JSESSIONID=6F99E175B900E6916CB8E7AA25736804; Path=/; HttpOnly
  Server = nginx
}
body: {
  "uuid": "c7195c45-9306-4133-891e-ceb02ea74883",
  "data": "WLYDSMYDAXNHBEFOBGKJFSZNMORQTY"
}

// GetToken
-> POST https://demo.lp.crpt.tech/api/v3/auth/cert/6242a186-970c-4260-9bd9-b8f19ed66d4d
headers: {
  X-ApiMethodName = GetToken
  Accept = application/json, text/json, text/x-json, text/javascript, application/xml, text/xml
  Content-type = application/json
}
body: {
  "uuid": "c7195c45-9306-4133-891e-ceb02ea74883",
  "data": "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"
}

<- OK 200 (OK) https://demo.lp.crpt.tech/api/v3/auth/cert/6242a186-970c-4260-9bd9-b8f19ed66d4d
timings: {
  started: 2021-04-13 00:38:15
  elapsed: 0:00:00.688
}
headers: {
  Transfer-Encoding = chunked
  Connection = keep-alive
  Vary = Accept-Encoding
  Content-Encoding =
  Content-Type = application/json;charset=UTF-8
  Date = Mon, 12 Apr 2021 21:38:16 GMT
  Set-Cookie = JSESSIONID=5B08FC587F0D222D2BA76AB5AB2225B2; Path=/; HttpOnly
  Server = nginx
}
body: {
  "token": "fe0c4e76-4820-4fe7-89bc-208434718541"
}

// GetVersion
-> GET https://intuot.crpt.ru:12011/api/v2/milk/version
headers: {
  X-ApiMethodName = GetVersion
  clientToken = fe0c4e76-4820-4fe7-89bc-208434718541
  Accept = application/json, text/json, text/x-json, text/javascript, application/xml, text/xml
}

<- OK 200 (OK) https://intuot.crpt.ru:12011/api/v2/milk/version
timings: {
  started: 2021-04-13 00:38:09
  elapsed: 0:00:09.625
}
headers: {
  Pragma = no-cache
  X-Content-Type-Options = nosniff
  X-Frame-Options = DENY
  X-Xss-Protection = 1; mode=block
  Content-Length = 49
  Cache-Control = no-cache, no-store, max-age=0, must-revalidate
  Content-Type = application/json; charset=UTF-8
  Date = Mon, 12 Apr 2021 21:38:19 GMT
  Expires = 0
  Set-Cookie = targetsrv=http://10.0.25.4:8811; Path=/
}
body: {
  "omsVersion": "3.1.21.0",
  "apiVersion": "2.0.0.95"
}

// Ping
-> GET https://intuot.crpt.ru:12011/api/v2/milk/ping?omsId=67AD4640-48F4-4ECA-886B-517462CF0415
headers: {
  X-ApiMethodName = Ping
  clientToken = fe0c4e76-4820-4fe7-89bc-208434718541
  Accept = application/json, text/json, text/x-json, text/javascript, application/xml, text/xml
}

<- ERROR 400 (BadRequest) https://intuot.crpt.ru:12011/api/v2/milk/ping?omsId=67AD4640-48F4-4ECA-886B-517462CF0415
timings: {
  started: 2021-04-13 00:38:19
  elapsed: 0:00:00.109
}
headers: {
  Pragma = no-cache
  X-Content-Type-Options = nosniff
  X-Frame-Options = DENY
  X-Xss-Protection = 1; mode=block
  Content-Length = 282
  Cache-Control = no-cache, no-store, max-age=0, must-revalidate
  Content-Type = application/json; charset=UTF-8
  Date = Mon, 12 Apr 2021 21:38:19 GMT
  Expires = 0
  Set-Cookie = targetsrv=http://10.0.25.4:8811; Path=/
}
body: {
  "success": false,
  "globalErrors": [
    {
      "error": "Маркер безопасности fe0c4e76-4820-4fe7-89bc-208434718541 не соответствует указанному в запросе идентификатору СУЗ 67AD4640-48F4-4ECA-886B-517462CF0415",
      "errorCode": 1140
    }
  ]
}
