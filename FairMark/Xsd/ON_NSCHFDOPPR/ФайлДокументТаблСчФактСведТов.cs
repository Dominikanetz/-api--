//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// This code was generated by XmlSchemaClassGenerator version 2.0.521.0.
namespace FairMark.Xsd.ON_NSCHFDOPPR
{
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.521.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("ФайлДокументТаблСчФактСведТов", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ФайлДокументТаблСчФактСведТов
    {
        
        /// <summary>
        /// <para>В том числе сумма акциза (графа 6 счета-фактуры)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("В том числе сумма акциза (графа 6 счета-фактуры)")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("Акциз", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public СумАкцизТип Акциз { get; set; }
        
        /// <summary>
        /// <para>Сумма налога, предъявляемая покупателю (графа 8 счета-фактуры)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Сумма налога, предъявляемая покупателю (графа 8 счета-фактуры)")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("СумНал", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public СумНДСТип СумНал { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<ФайлДокументТаблСчФактСведТовСвТД> _свТД;
        
        /// <summary>
        /// <para>Сведения о таможенной декларации</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Сведения о таможенной декларации")]
        [System.Xml.Serialization.XmlElementAttribute("СвТД", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.Collections.ObjectModel.Collection<ФайлДокументТаблСчФактСведТовСвТД> СвТД
        {
            get
            {
                return this._свТД;
            }
            private set
            {
                this._свТД = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the СвТД collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool СвТДSpecified
        {
            get
            {
                return (this.СвТД.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="ФайлДокументТаблСчФактСведТов" /> class.</para>
        /// </summary>
        public ФайлДокументТаблСчФактСведТов()
        {
            this._свТД = new System.Collections.ObjectModel.Collection<ФайлДокументТаблСчФактСведТовСвТД>();
            this._инфПолФХЖ2 = new System.Collections.ObjectModel.Collection<ТекстИнфТип>();
        }
        
        /// <summary>
        /// <para>Дополнительные сведения об отгруженных товарах (выполненных работах, оказанных услугах), переданных имущественных правах</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Дополнительные сведения об отгруженных товарах (выполненных работах, оказанных ус" +
            "лугах), переданных имущественных правах")]
        [System.Xml.Serialization.XmlElementAttribute("ДопСведТов", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ФайлДокументТаблСчФактСведТовДопСведТов ДопСведТов { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<ТекстИнфТип> _инфПолФХЖ2;
        
        /// <summary>
        /// <para>Информационное поле факта хозяйственной жизни 2</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Информационное поле факта хозяйственной жизни 2")]
        [System.Xml.Serialization.XmlElementAttribute("ИнфПолФХЖ2", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.Collections.ObjectModel.Collection<ТекстИнфТип> ИнфПолФХЖ2
        {
            get
            {
                return this._инфПолФХЖ2;
            }
            private set
            {
                this._инфПолФХЖ2 = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the ИнфПолФХЖ2 collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ИнфПолФХЖ2Specified
        {
            get
            {
                return (this.ИнфПолФХЖ2.Count != 0);
            }
        }
        
        /// <summary>
        /// <para>Номер строки таблицы</para>
        /// <para xml:lang="en">Total number of digits: 6.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Номер строки таблицы")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("НомСтр")]
        public int НомСтр { get; set; }
        
        /// <summary>
        /// <para>Наименование товара (описание выполненных работ, оказанных услуг), имущественных прав (в том числе графа 1 счета-фактуры)</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 1000.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Наименование товара (описание выполненных работ, оказанных услуг), имущественных " +
            "прав (в том числе графа 1 счета-фактуры)")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(1000)]
        [System.Xml.Serialization.XmlAttributeAttribute("НаимТов")]
        public string НаимТов { get; set; }
        
        /// <summary>
        /// <para>Код единицы измерения (графа 2 счета-фактуры)</para>
        /// <para>Код из Общероссийского классификатора единиц измерения</para>
        /// <para xml:lang="en">Minimum length: 3.</para>
        /// <para xml:lang="en">Maximum length: 4.</para>
        /// <para xml:lang="en">Pattern: ([0-9]{3})|([0-9]{4}).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Код единицы измерения (графа 2 счета-фактуры)")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(3)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(4)]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("([0-9]{3})|([0-9]{4})")]
        [System.Xml.Serialization.XmlAttributeAttribute("ОКЕИ_Тов")]
        public string ОКЕИ_Тов { get; set; }
        
        /// <summary>
        /// <para>Код единицы измерения (графа 2 счета-фактуры при составлении документа с Функция=СЧФ или Функция=СЧФДОП при отсутствии данных и для документа с Функция=СЧФ, выставляемом при получении оплаты, частичной оплаты в счет предстоящих поставок товаров (выполнения работ, оказания услуг), передачи имущественных прав)</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 1.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute(@"Код единицы измерения (графа 2 счета-фактуры при составлении документа с Функция=СЧФ или Функция=СЧФДОП при отсутствии данных и для документа с Функция=СЧФ, выставляемом при получении оплаты, частичной оплаты в счет предстоящих поставок товаров (выполнения работ, оказания услуг), передачи имущественных прав)")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(1)]
        [System.Xml.Serialization.XmlAttributeAttribute("ДефОКЕИ_Тов")]
        public string ДефОКЕИ_Тов { get; set; }
        
        /// <summary>
        /// <para>Количество (объем) (графа 3 счета-фактуры)</para>
        /// <para xml:lang="en">Total number of digits: 26.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 11.</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Количество (объем) (графа 3 счета-фактуры)")]
        [System.Xml.Serialization.XmlAttributeAttribute("КолТов")]
        public decimal КолТов { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the КолТов property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool КолТовSpecified { get; set; }
        
        /// <summary>
        /// <para>Цена (тариф) за единицу измерения (графа 4 счета-фактуры)</para>
        /// <para xml:lang="en">Total number of digits: 26.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 11.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Цена (тариф) за единицу измерения (графа 4 счета-фактуры)")]
        [System.Xml.Serialization.XmlAttributeAttribute("ЦенаТов")]
        public decimal ЦенаТов { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ЦенаТов property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ЦенаТовSpecified { get; set; }
        
        /// <summary>
        /// <para>Стоимость товаров (работ, услуг), имущественных прав без налога - всего (графа 5 счета-фактуры)</para>
        /// <para xml:lang="en">Total number of digits: 19.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Стоимость товаров (работ, услуг), имущественных прав без налога - всего (графа 5 " +
            "счета-фактуры)")]
        [System.Xml.Serialization.XmlAttributeAttribute("СтТовБезНДС")]
        public decimal СтТовБезНДС { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the СтТовБезНДС property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool СтТовБезНДСSpecified { get; set; }
        
        /// <summary>
        /// <para>Налоговая ставка (графа 7 счета-фактуры)</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 35.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Налоговая ставка (графа 7 счета-фактуры)")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(35)]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("НалСт")]
        public string НалСт { get; set; }
        
        /// <summary>
        /// <para>Стоимость товаров (работ, услуг), имущественных прав с налогом - всего (графа 9 счета-фактуры)</para>
        /// <para xml:lang="en">Total number of digits: 19.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Стоимость товаров (работ, услуг), имущественных прав с налогом - всего (графа 9 с" +
            "чета-фактуры)")]
        [System.Xml.Serialization.XmlAttributeAttribute("СтТовУчНал")]
        public decimal СтТовУчНал { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the СтТовУчНал property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool СтТовУчНалSpecified { get; set; }
        
        /// <summary>
        /// <para>Стоимость товаров (работ, услуг), имущественных прав с налогом - всего (графа 9 счета-фактуры) при составлении документа с Функция=СЧФ или Функция=СЧФДОП при отсутствии показателя</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 1.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Стоимость товаров (работ, услуг), имущественных прав с налогом - всего (графа 9 с" +
            "чета-фактуры) при составлении документа с Функция=СЧФ или Функция=СЧФДОП при отс" +
            "утствии показателя")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(1)]
        [System.Xml.Serialization.XmlAttributeAttribute("ДефСтТовУчНал")]
        public string ДефСтТовУчНал { get; set; }
    }
}
